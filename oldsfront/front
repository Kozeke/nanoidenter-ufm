import React, { useState, useEffect } from "react";
import ReactECharts from "echarts-for-react";

// Generate y1 to y100 dynamically
const lines = Array.from({ length: 100 }, (_, i) => `y${i + 1}`);

const MultiLineChart = () => {
    const [numLines, setNumLines] = useState(10);
    const [forceData, setForceData] = useState([]);

    useEffect(() => {
        fetch("http://127.0.0.1:8000/data") // Fetch only Force vs Z
            .then(response => response.json())
            .then(data => {
                if (data.status === "success" && data.data) {
                    setForceData(data.data.Force_vs_Z || []);
                    console.log(forceData)
                }
            })
            .catch(error => console.error("Error fetching data:", error));
    }, []);

    const getChartOptions = (data) => ({
        title: { text: "Force vs Z", left: "center" },
        tooltip: { trigger: "axis" },
        xAxis: { type: "value", name: "Z", nameLocation: "middle", nameGap: 25 },
        yAxis: { type: "value", name: "Force", nameLocation: "middle", nameGap: 40 },
        series: lines.slice(0, numLines).map((key, index) => ({
            name: key,
            type: "line",
            smooth: true,
            showSymbol: false,
            data: data.map(d => [d.x, d[key] ?? null]), // Ensure (Z, Force) pairs
        })),
        legend: { show: true, bottom: 0 },
        grid: { left: "10%", right: "10%", bottom: "15%" },
        animation: false, // Improves performance when updating chart
    });

    return (
        <div>
            <h2>Force vs Z</h2>
            <input
                type="range"
                min="1"
                max="100"
                value={numLines}
                onChange={(e) => setNumLines(Number(e.target.value))}
            />
            <ReactECharts 
                option={getChartOptions(forceData)} 
                style={{ height: 400 }} 
                notMerge={true} 
            />
        </div>
    );
};

export default MultiLineChart;
